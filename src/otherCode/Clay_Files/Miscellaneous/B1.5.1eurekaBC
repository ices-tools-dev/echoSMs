REM	SEISMIC UTILITIES APPENDIX B1.5.1 eurekaREM	PRGM TEST EUREKA.CSCREM   	ROBINSON CALLED HIS PRGM TO DO THE INVERSION 'EUREKA'.I LIKE THE NAME.	DIM R(50),G(50),GI(50),FZ(1,50),AZ(1,50)	M = 0:N = 1: REM  ARRAYS 0 AND 1		PRINT " R(M,N)*F(M)=G(M). TOEPLITZ FORM"	PRINT "PRGM USES INPUT OF R(I,J) AND G(I) TO COMPUTE F(J)."	PRINT "   IT COMPUTES A MATRIX A(IJ)=(R(I,J))^-1.	PRINT REM     R(J)   HAS TOEPLITZ FORM.R(J) STARTS AT 0 TO LI.R(J) ARE AUTO CORRELATIONS. GI(J) ARE DESIRED OUTPUT. F(J) ARE FILTER COEF. A(J) ARE SOLN OF A(J)*R(J,K)=(1,0,0,...).REM   	PRGM USES NORMAN LEVINSON'S RECURSIVE ALGORITHM.REM   	REF:J.F. CLAERBOUT 'FUNDIMENTALS OF DATA PROCESSING' P 53-57.BLACKWELL SCI. PUB.1985REM   	REF:E.A.ROBINCON & S.TREITEL 'GEOPHYSICAL SIGNAL ANALYSIS' P 163-169.PRENTCICE-HALL INC. 1980REM  	ROBINSON AND TREITEL,'GEOPHYSICAL ANALYSIS' P 163-169.(1980)REM     I USE TRANSFER OF ARRAYS AZ(M,J) TO AZ(N,J) FOR EACH LOOP ON L.REM   	LAST STEP IS TO MOVE ALL ARRAYS FROM AZ(N,J) TO AZ(M,J) FOR NEXT LOOP ON L.	PRINT "INPUT DATA FOR FILTER COMPUTION"	GOTO 2000 : REM READ INPUT FILE 100	PRINT "MAX LENGTH CORRELATION =";J1	PRINT  TAB( 5);"INDICES 0 TO LI. LI=";: INPUT LI	PRINT "INPUT PREDICT AHEAD TIME STEPS=";: INPUT PA		FOR J = 0 TO LI + PA	    G(J) = R(J + PA)	    GI(J) = G(J) : REM HERE DESIRED OUTPUT IS R(J+PA)	NEXT J	GOSUB 1000: REM  DO SUB EUREKAREM  	OUTPUTS 	PRINT " L      A(L)     F(L)/F(0),F(0)=";FZ(M,0)		FOR L = 0 TO LI	    PRINT L; TAB( 6);AZ(M,L); TAB( 21);FZ(M,L) / FZ(M,0)	NEXT L	INPUT Q$ : REM PAUSE	PRINT 	PRINT "CHECK A(I,J)*R(I,J) SHOULD BE (1,0,...)"	PRINT 	PRINT " J    A(I,J)*R(I,J)"		V = 0 	FOR J = 0 TO LI	    V = V + AZ(M,J) * R(J)	NEXT J		FOR L = 0 TO LI	    S = 0	        FOR I = 0 TO LI	            K =  ABS (L - I)	            S = S + AZ(M,I) * R(K)	        NEXT I	    PRINT L; TAB( 6);S / V	NEXT L	INPUT Q$	PRINT 	PRINT "CHECK F(L). R(MN)*F(N)=G(N)"	PRINT 	PRINT " L   TEST G(L)           ORIG G(L)"		FOR L = 0 TO LI	    S = 0	        FOR I = 0 TO LI	            K =  ABS (L - I)	            S = S + FZ(M,I) * R(K)	        NEXT I	    PRINT L; TAB( 6);S; TAB( 23);GI(L)	NEXT L	INPUT Q$	GOTO 3000 : REM WRITE OUTPUT FILE...		1000	REM   PRGM EUREKA.CSC REM  	L=0 	AZ(M,0) = 1	FZ(M,0) = G(0) / R(0)	AL(M) = R(0)	GM(M) = FZ(M,0) * R(1)	BT(M) = R(1)	K(M) =  - BT(M) / AL(M)		FOR L = 1 TO LI	    AZ(N,0) = AZ(M,O)	    	        FOR J = 1 TO L - 1	            AZ(N,J) = AZ(M,J) + K(M) * AZ(M,L - J)	        NEXT J			    AZ(N,L) = K(M) * AZ(M,0)	    AL(N) = AL(M) + K(M) * BT(M)	    REM  FOR BETA	    BT(N) = 0	    	    FOR J = 0 TO L	        BT(N) = BT(N) + AZ(N,J) * R(L + 1 - J)	    NEXT J	    	    K(N) =  - BT(N) / AL(N)	    Q = (G(L) - GM(M)) / AL(N)	    	    FOR J = 0 TO L - 1	        FZ(N,J) = FZ(M,J) + Q * AZ(N,L - J)	    NEXT J	    	    FZ(N,L) = Q * AZ(N,0)REM  	    GAMMA	    GM(N) = 0	                FOR J = 0 TO L                GM(N) = GM(N) + FZ(N,J) * R(L + 1 - J)            NEXT J	    REM   	SLIDE COEFFICIENTS	    FOR J = 0 TO L	        AZ(M,J) = AZ(N,J)                FZ(M,J) = FZ(N,J)	    NEXT J	    REM  	SLIDE	    AL(M) = AL(N)	    BT(M) = BT(N)	    K(M) = K(N)	    GM(M) = GM(N)REM  	REPEAT FOR NEW L	NEXT L 	RETURN : REM  RETURN TO DISPLAY RESULTS2000  	REM  READ CORRELATION FILEREM    	READ THE CORRELATION OF A SIGNAL HAVING DURATION J1 FROM A FILE.	print"give file name":input n$	open n$ for input as #1 	input #1, tale1$	input #1, tale2$	input #1, HK,CK,DK,T0	input #1, tale3$	input #1, RR	input #1, J1		FOR J = 0 TO J1	    input #1, R(J)	NEXT J		close #1		PRINT TALE1$	PRINT TALE2$	PRINT HK;CK;DK;T0	PRINT TALE3$	PRINT RR,J1		FOR J = 0 TO J1	    PRINT J,R(J)	NEXT J	        GOTO 100	3000	REM  FILE MAKER	print"give file name":input n$	open n$ for output as #1	 		write #1, "Filter coefficients from eureka"	write #1, "LI filter coefficients and predict ahead PA steps"	write #1, tale1$	write #1, tale2$	write #1, HK,CK,DK,T0	write #1, tale3$	write #1, RR	write #1, J1 	write #1, LI	write #1, PAREM	     PRINT LI AND FZ(M,N)	FOR N = 0 TO LI	    write #1, FZ(M,N)	NEXT N		close #1		END 