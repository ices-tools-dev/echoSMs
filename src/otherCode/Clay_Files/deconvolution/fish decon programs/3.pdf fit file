  PRINT " 'pdf fit file mac' 12/29/91 from 7/6/86' CSC"  '  REMS AND FITS ADDED 1/2/85 CSC  DIM xe(200),XL(200),WE(200),CE(200),L(200),XR(200),WR(1000),CR(1000),LR(1000) DS = 0: REM    DATA LOW INDEX NO. DEFAULT. ND = 20: REM  DEFAULT   pi = 4 * ATN (1)  ' coef for rice pdf calc  I(0) = 3.51562:I(1) = 3.089942:I(2) = 1.206749:I(3) = .265973 I(4) = .0360768:I(5) = .0045813  j(0) =.39894228#  j(1) = .01328592#:j(2) = .00225319#:j(3) = -.00157565#  j(4) = .00916281#:j(5) = -.02057706#  j(6) = .02635537#:j(7) = -.01647633#:j(8) =.00392377# 5060 '5080  REM ... MENU....  PRINT "MENU"  PRINT ; TAB( 5);"rf"; TAB( 10);"READ FILE"  PRINT ; TAB( 5);"c"; TAB( 10);"COMPUTE WF(E) & FISH DENSITY"  PRINT ; TAB( 5);"ccf"; TAB( 10);"CHOOSE CALIB FACTOR"  PRINT ; TAB( 5);"psp"; TAB( 10);"PRINT SONAR PARAMETERS"  PRINT ; TAB( 5);"pd"; TAB( 10);"PRINT DATA"  PRINT ; TAB( 5);"i"; TAB( 10);"ITERATE"  PRINT ; TAB( 5);"g"; TAB( 10);"GRAPH"  PRINT ; TAB( 5);"cfr"; TAB( 10);"CALC FULL RICE CURVE"  PRINT ; TAB( 5);"ot"; TAB( 10);"PRINT OUTPUT TABLE"  PRINT ; TAB( 5);"r"; TAB( 10);"RESET FOR 'i' AFTER 'CFR'"  PRINT ; TAB( 5);"m"; TAB( 10);"MENU"  PRINT ; TAB( 5);"q"; TAB( 10);"QUIT"5300  REM  RETURNS FROM SUBS  PRINT : PRINT  TAB( 8);"MENU ";:INPUT m$  IF m$ = "rf" THEN 6000  IF m$ = "c" THEN 1160  IF m$ = "ccf" THEN 5600  IF m$ = "psp" THEN 9000  IF m$ = "pd" THEN 4460  IF m$ = "i" THEN 1520  IF m$ = "r" THEN 8000: REM  RESET RM,DM,LR(J)  IF m$ = "g" THEN 2800  IF m$ = "cfr" THEN 3920  IF m$ = "ot" THEN 4680  IF m$ = "q" THEN  10000   IF m$ = "m" THEN 5060  PRINT "ERROR": GOTO 5300   REM  COMPUTE FISH DENSITY FD1160  REM  COMPUTE CUMULATIVE CE(M)  REM  SUM IS TOTAL FISH DENSITY,FISH/M^3. HERE FD  PRINT "CHOOSE DATA LOW 'DL' AND MAX 'DM'"  PRINT "OLD DL=";DS;"  NEW DL=";: INPUT DS: REM  D SMALL  PRINT "OLD DM=;"DM;"  NEW DM=";: INPUT DM '   INSERT  SIGN FOR L(M) DECREASING AS M INCREASES       CE(0) = 0      C = 0  FOR m = DS TO DM      C = xe(m) * (XL(m - 1) - XL(m)) + C      CE(m) = C  NEXT m   FD = C: REM  FISH DENSITY  PRINT "TOTAL FISH DENSITY=";FD;" FISH/M^3"  '   NORMALIZE CE(M) AND WE(M)   FOR m = DS TO DM        WE(m) = xe(m) / C      IF YN < WE(m) THEN YN = WE(m)        CE(m) = CE(m) / C   NEXT m   GOTO 5300 1520  '  ITERATE SUB  PRINT "RICE.PDF enter parameters for fish"   YM = YN: REM   RESETS   PRINT "ENTER NUMBER OF TYPES OF FISH, 1 to NF"  PRINT "TYPES=";: INPUT NF   NT = NF - 1     FOR n = 0 TO NT     PRINT "N=";n + 1;" old gamma =";G(n);" old L =";LE(n)     PRINT "input gamma,length=";: INPUT G(n),LE(n)     S(n) = LE(n) ^ 2     PRINT "old fract fish =";fw(n);" new fract =";: INPUT fw(n)  NEXT n   '  COMPUTE FISH LENGTH: 'LOVE,J ACOUST SOC. AM.,62,1397-1403(1977)   WL = SS / SF  AI = .056  BI = 1.88: REM  AI,BI EMPERICAL CONST FROM LOVE  B = 2 / BI  KD = (4 * pi / AI) ^ (1 / BI)  KE = KD * WL ^ (1 - B) * CF ^ B     FOR n = 0 TO NT       FL = KE * LE(n) ^ B       FL(n) =  INT (1000 * FL + .5) / 1000       PRINT "#";n + 1;" FISH LENGHT=";FL(n);" m, Love's formula"  NEXT n    FOR m = 0 TO DM      WR(m) = 0  NEXT m  maxrm = 0  FOR n = 0 TO NT       ga = G(n):sb = S(n):fw = fw(n)     FOR m = DS TO DM         E = L(m)         xe = ((1 + ga) * E ^ 2 + ga * sb) / sb         x = 2 * E *  SQR (ga * (1 + ga)) /  SQR (sb)         xc = 2 * E * (1 + ga) / sb        GOSUB 240         WR(m) = w + WR(m)         IF maxrm < WR(m) THEN maxrm = WR(m)     NEXT m  NEXT n  '  COMPUTE CUMULATIVE   C = 0   KT = 0   'set the sign FOR ORDER OF L(M), LARGE TO SMALL  FOR m = DS + 1 TO DM      C = C + WR(m) * (L(m - 1) - L(m))      CR(m) = C      CD =  ABS (C - CE(m))    IF KT < CD THEN KT = CD  NEXT m    '  COMPUTE SQUARED ERROR   E = 0 ES = 0   FOR m = DS TO DM      E = E + (WE(m) - WR(m)) ^ 2      ES = ES + WE(m) ^ 2  NEXT m     E =  SQR (E / (ES * DM))   eor =  INT (10000 * E + .5) / 100   KT =  INT (1000 * KT + .5) / 1000  PRINT "error %=";eor;" max error cumm' =";KT'  END ITERATE SUBPRINT "do full rice 'y' or 'n'";:INPUT R$IF R$ = "n" GOTO 53003920 '3940  '  CALC RICE PDF AT CLOSELY SPACED POINTS  PRINT   PRINT "CALC' FULL RICE CURVE"  PRINT "NO DATA STEPS=";DM;"  INPUT RM =";: INPUT RM  PRINT "L(M)MAX = ";L(0);" INPUT LMAX = ";: INPUT LM   DL = LM / RM     FOR m = 0 TO RM      WR(m) = 0  NEXT m   '  COMPUTE RICE USING I0 SUB maxrm = 0  FOR n = 0 TO NT        ga = G(n):  sb = S(n):  fw = fw(n)       FOR m = 0 TO RM          E = DL * (RM - m)          LR(m) = E          xe = ((1 + ga) * E ^ 2 + ga * sb) / sb          x = 2 * E *  SQR (ga * (1 + ga)) /  SQR (sb)          xc = 2 * E * (1 + ga) / sb          GOSUB 240           WR(m) = w+ WR(m)      IF maxrm < WR(m) THEN maxrm = WR(m)      NEXT m  NEXT n    REM  END CFR  GOTO 5300: REM  MENU2800  '  PLOT GRAPHS   PRINT"y max=";YM;"  rice max = ";maxrm   PRINT "input YMAX: for graph =";:INPUT YG   PRINT "INPUT DELTA Y=";: INPUT DY   PRINT "L MAX=";L(0);" INPUT LM=";: INPUT LM   PRINT "INPUT DELTA L=";: INPUT DL Y4 = 260:Y8 = 270:Y2 = 20:x2 = 20:x7 = 480:X8 = 490 XS = (x7-x2) / LM YS = (Y4-Y2) / YG  CLS         : REM CLS clears the screen PICTURE ON  : REM PICTURE ON puts screen graphics in storage. SHOWPEN     : REM SHOWPEN also puts graphics on the screen   IF RM < = DM THEN RM = DM' plot rice pdf    FOR m = DS + 1 TO RM        Y = Y4 - YS * WR(m - 1)        Y1 = Y4 - YS * WR(m)        x = XS * LR(m - 1) + x2        X1 = XS * LR(m) + x2       IF x>0 AND x<x7 AND Y>1 AND Y<300 THEN LINE(x,Y)- (X1,Y1)   NEXT m   '  PLOT DATA  FOR m = DS TO DM      x = XS * L(m) + x2      Y = Y4 - YS * WE(m)     IF x>2 AND Y>2 AND Y<Y8 AND x<x7 THEN LINE(x-2,Y)-(x+2,Y)     IF x >2 AND x < x7 AND Y>2 AND Y <Y8 THEN LINE(x,Y-2)-(x,Y+2)     LINE ( x2,Y4) - (X8,Y4)  NEXT m    LINE ( x2,Y2)-( x2,Y4)       FOR m = 1 TO  INT (LM / DL)         x = XS * DL * m + x2        IF x < X8 THEN  LINE ( x,Y4) - (x,Y4+5)     NEXT m       FOR m =  - 1 TO  INT (YG / DY + .5)      Y = Y4 - m * YS * DY    IF Y <280 AND Y >0 THEN  LINE(x2,Y) - (x2+5,Y)  NEXT m CALL MOVETO (20,280): PRINT N1$;" delta L=";DL;" delta Y=";DY;" error%=";eor;" max cum' error=";KT  PICTURE OFF : REM PICTURE OFF ends graphics operations. INPUT Q$  CALL MOVETO (20,280)      PRINT " input 'mf' to make a file ";:INPUT MF$ IF MF$ <> "mf" GOTO 520 pic$ = PICTURE$    :REM PICTURE$ is name of stored picture.  CALL MOVETO (50, 25)     :REM name the file  PRINT  "I've got the picture in pic$ ("; LEN (pic$); ")"pictFile$ = FILES$(0,"enter name:") REM	SAVE FILE IN 'PICT' FORMATE. OPEN pictFile$ FOR OUTPUT AS #3                          REM	FOR-NEXT LOOP MAKES A HEADER FOR PICT FILE FORMATE. FOR I = 1 TO 512 : PRINT  #3, CHR$ (0); : NEXT  PRINT  #3, pic$  CLOSE #3  :REM the picture 'pic$' is stored as a text file. REM	CHANGE THE FILE TYPE FROM TEXT TO PICT NAME pictFile$ AS pictFile$, "PICT" '	USE MacDraw TO READ THE FILE. note: MacDraw ii does not work. '	Then IT CAN BE SAVED AS A MacDraw DRAWING.    CLS    :REM clear screen and clean memory  PICTURE ON  PICTURE OFF  PRINT pictFile$PRINT"name data file ";:INPUT nn$OPEN nn$ FOR OUTPUT AS #2  WRITE #2, name1$;" original file"  WRITE #2, dcvl$ ;" dcvl of original file"  WRITE #2, pictFile$ ;" graphic file name"  WRITE #2, "sonar freq ";SF;" Hz" WRITE #2, ""  FOR I = 0 TO IT - 1     WRITE #2, A$(I)  NEXT I   WRITE #2, ""  WRITE #2, "NO OF PINGS=";MP  WRITE #2, "CALIB FACTOR=";CF  WRITE #2, "Steps/decade ";ND;" Smooth over ";SM;" steps   WRITE #2, ""  FOR n = 0 TO NT      WRITE #2, "Type(";n + 1;") Fract %=";fw(n) * 100      WRITE #2, "gamma=";G(n); "length=";LE(n); "au" ;FL(n); "m"      WRITE #2,  "TARGET STRENGTH =";INT(200*LOG(CF*LE(n))/LOG(10)+.5)/10;"dB"      WRITE #2,  "FISH DENSITY=";FD * fw(n); "fish/m^3"       WRITE #2, ""  NEXT n  WRITE #2,  "error %=";eor;" max cumm' error for K-S test =";KTCLOSE #2520  CLS    :REM clear screen and clean memory     PICTURE ON     PICTURE OFF  GOTO 5300   240  '  CALC MOD BESSEL FUNCTION I0(X).USE ABRM AND STEGUN POLYNOM. APPROX.  '  ENTER ALL NUMBERS AS I(J) and J(J)  IF x < 3.75 THEN     T = x / 3.75     T2 = I(0) * T ^ 2      T3 = I(1) * T ^ 4     T4 = I(2) * T ^ 6     T5 = I(3) * T ^ 8     T6 = I(4) * T ^ 10     T7 = I(5) * T ^ 12     I0 = 1 + T2 + T3 + T4 + T5 + T6 + T7    w = fw*xc*EXP(-xe)*I0ELSE     T =  3.75/x     T1 = j(1) *T     T2 = j(2 ) * T ^ 2     T3 = j(3) * T ^ 3     T4 = j(4) * T ^ 4     T5 = j(5) * T ^ 5     T6 = j(6) * T ^ 6     T7 = j(7) * T ^ 7     T8 = j(8) * T ^ 8     I1 = j(0) + T1 + T2 + T3 + T4 + T5 + T6 + T7 + T8     w = fw*xc*EXP(x-xe)*I1/SQR(x)END IF  RETURN  4460  '  PRINT TABLE OF INPUT NORMALIZED INPUT DATA  PRINT T$  PRINT   PRINT "M"; TAB( 5);"L(M)"; TAB( 21);"NORM. WE(M)"   FOR m = 0 TO DM      PRINT m; TAB( 5);L(m); TAB( 21);WE(m) NEXT mGOTO 5300: REM  MENU4680  REM  OUTPUT TABLE  PRINT   PRINT T$  FOR n = 0 TO NT      PRINT "FISH #";n + 1;" GAMMA=";G(n);"  LENGTH(LOVE)=";FL(n)      PRINT  TAB( 6);"SIGMA BS=";S(n);"  LE = ";LE(n)      PRINT  TAB( 6);"FISH DENSITY=";FD * fw(n);" /M^3"  NEXT n    PRINT  TAB( 6);"ERROR=";eor;" %";"  T=";KT  PRINT   PRINT "  LR(M)     WR(M)"  PRINT    FOR m = 0 TO RM      PRINT LR(m),WR(m)  NEXT m  GOTO 5300  5600  PRINT "ENTER NEW CALB' FACTOR=";: INPUT CF  GOTO 5300 6000  '  --- READ OLD FISH ECHO FILE6040  ' ENTER DATA  PRINT " READ FILE NAMED": INPUT N1$    OPEN N1$ FOR INPUT AS #1      INPUT #1, name1$:' original file  INPUT #1, dcvl$ :' dcvl of original file  INPUT #1, SF: REM   SONAR FREQ  INPUT #1, SS: REM   SOUND SPEED  INPUT #1, RT: REM   RAD TRNSDUCER  INPUT #1, R1: REM   RANGES R1 ,R2  INPUT #1, R2  INPUT #1, MP: REM   NO OF PINGS  INPUT #1, E0: REM   MAX RAW ECHO PROC AMP  INPUT #1, DE: REM   DELTA E  INPUT #1, BJ: REM    NO AMP BINS  INPUT #1, GS: REM   SONAR GAIN SET  INPUT #1, SL: REM   SOURCE LEVEL  INPUT #1, RL: REM   RCV TRNS LEVEL  INPUT #1, TVG: REM   TVG 40 OR 20  INPUT #1, MR: REM   MAX TVG RANGE  INPUT #1, G1: REM   GAIN AT 1 M  INPUT #1, PG: REM   PROCESSOR GAIN  INPUT #1, PV: REM   PROC VOLT CALIB  INPUT #1, TR: REM   TAPE REC GAIN  INPUT #1, ND: REM   STEPS/DECADE  INPUT #1, SM: REM   smoothed over SM steps    FOR j = 0 TO BJ      INPUT #1,XL(j), xe(j)  NEXT j    INPUT #1, IT  FOR j = 0 TO IT - 1      INPUT #1, A$(j)  NEXT j  CLOSE #1 DM = BJ RM = BJ CF(1) = 1:CF(2) = 1  '  CALC PSI ,INTEGRATED BEAM:C-M CHAP 7 w = 2 * pi * SF PRINT  "w=";w K = w / SS PRINT  "k =";K PS = 5.78 / (K * RT) ^ 2 PRINT  "ps =";PS' CALCULATE CALIB CONST TO CONVERT RAW ECHO AMP TO ACOUSTIC FISH LENGTH AND ESTM FISH LENGTH'  SONAR GAIN INCREASES AS 40*LOG(R) OR 20*LOG(R).IE TVG*LOG(R).'   FOR SINGLE SCATTERS,RANGE CORRECTION=-40*LOG(R) TG = 40 * LD *  LOG (R2 / MR): REM   SET TG FOR R>MR.RCV GAIN CONST FOR R>MR.  IF R2 < MR AND TVG = 40 THEN TG = 0: '  NO CORRECTION  IF R2 < 1.4 * MR AND TVG = 20 THEN TG = 30-20* LD*LOG (.5 * (R1 + R2))'  TG=RANGE GAIN CORRECTION RG = G1 - 3 * (10 - GS) + TG: REM  ADJUSTED RCV GAIN AT R1 IN M S = (SL + RL + RG) / 20 CS = 10 ^  - S PC = PV / (TR * PG): REM  TAPE AND PROC. CF = CS * PC: REM  CF*B(J)=ACOUSTIC FISH LENGTH '   CALIB FACTOR FOR ECHO AMPLITUDES A =  LOG (10) / ND   FOR j = 0 TO BJ       L(j) = XL(j)       WE(j) = xe(j)  NEXT j    GOTO 5300: REM  MENU  8000  REM  RESET DM = BJ RM = BJGOTO 5300: REM  MENU  9000  REM  ------ PRINT SONAR PARAMETERS   FOR j = 0 TO IT - 1       PRINT A$(j)  NEXT j    PRINT   PRINT "SONAR PARAMETERS"  PRINT " SIMRAD EY-M"  PRINT "   FREQ =";SF  PRINT "   SOUND SPEED=";SS  PRINT "   TRANS RADIUS=";RT;" M"  PRINT "   SOURCE LEVEL'";SL;" DB, (1MU BAR AT 1 M)"  PRINT "   RCV TRNS=";RL;" DB"  PRINT "   RCV GAIN SET=";GS  PRINT "   TVG=";TVG;" log(R) dB"  PRINT "   CALIB SONAR GAIN AT 1 M="; INT (10 * G1 + .5) / 10;" DB"  PRINT "   RANGES,R1,R2 = ";R1;",";R2;"M"  PRINT "   TOTAL NO. PINGS=";MP  PRINT "   PROCESSER GAIN=";PG  PRINT "   E0=";E0  PRINT "   DELTA E=";DE  PRINT "   TAPE REC.GAIN=";TR  PRINT "   SYSTEM CALIB.=";CF  GOTO 5300: REM  MENU10000 END