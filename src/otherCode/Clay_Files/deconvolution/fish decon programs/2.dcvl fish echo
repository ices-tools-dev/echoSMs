'prgm deconvolve fish echoes, revised for Macinosh q basic 1/2/92 csc'      PRGM 'DCVL FISH ECHO 4/22/85'DIM B(50),FL(90),WT(90),WF(90),WE(50),EB(50),E(64),WL(50),A(50)DIM EA(50),EF(30),X(10),Y(10)PI = 4 *  ATN (1):LD = 1 /  LOG (10)  ND = 10 : 'defaults  SM = 4'FILE FORMAT 'PDF FISH FILE' PRINT "DECONVOLVE FISH ECHOS" PRINT "Use menu to enter file, compute and write output file"'  DECONVOLUTION OF FISH ECHO PDF,C.S.CLAY, J ACOUST SOC AM VOL 73,1989-1994 (1983)'   FOR THE PRGM: I MAKE SOME ALTERATIONS OF NOTATION TO HANDLE UPPER-LOWER CASE LETTER DUPLICATIONS.' '     DECONVOLVE PROGRAM HAS 6 OPERATIONS'	 USE MENU TO START AND FINISH'          1) READ FISH ECHO FILE.CALC SYSTEM PARAMETERS'          FORMAT PDF FISH FILE' '          2) SMOOTH-INTERPOLATE' '          3) COMPUTE WE(E), ECHO PDF FROM 'RAW' EXPERIMENTAL ECHO AMPLITUDE DISTRIBUTION EF(E).'  ECHO AMPLITUDES MUST BE EQUALLY SPACED ON A LOG SCALE.'  ECHO AMPLITUDES CAN BE ENTERED AS A 'READ FILE' OR AS DATA IN THE PRGM.'  SONAR SYSTEM PARAMETERS ENTER HERE' '         4) COMPUTE WT(B), PDF OF ECHO AMPLITUDE B DUE TO SONAR BEAM PATTERN.'   WT(B) COMES FROM EVALUATION FOR THE TRANSDUCER. ONE CAN USE EHRENBERG'S APPROXIMATION. EQ(8,9),CLAY 1983'     WT(B)=(AG*B^H)/(K*RT)^2. K=2*PI*F/C. RT=CIRCULAR TRANSDUCER RADIUS. G AND H ARE CONSTANTS. THESE CONSTANTS ARE EMPRICAL. VALUES FOR OUR 120 KHZ TRANSDUCER ARE AG=2.08 AND H=-.793. '        5) COMPUTE DECONVOLUTION'   WF(E) , PDF OF ECHO AMPLITUDES AFTER REMOVING EFFECT OF TRANSDUCER.'  USE RECURSIVE ALGORITHM TO DO LONG DIVISION OF POLYNOMIALS. '        6) MENU FOR OUTPUT PRINT100 ' menu2910  PRINT "FILES, COMPUTE AND RESULTS-MENU"    PRINT "   'nf' to enter new file E(j)"   PRINT "   'ei'  to show input file  E(j)"   PRINT "   'sp' to show TEXT AND SONAR PARAMETERS"   PRINT "   'c' calculate "   PRINT "   'ef' FOR INTERPOLATED EF(j)"   PRINT "   'wf' FOR WF(j) AND FISH DENSITY"   PRINT "   'nc' FOR NEW CALC"   PRINT "   'mf' TO WRITE OUTPUT FILE"   PRINT "   'm'  FOR MENU"   PRINT "   'q'  TO QUIT"3030  PRINT "MENU";:INPUT Q$      IF Q$ = "sp" THEN 3190   IF Q$ = "ei" THEN 3440   IF Q$ = "ef" THEN 3590   IF Q$ = "wf" THEN 3730   IF Q$ = "c" THEN 1260   IF Q$ = "nc" THEN 3960   IF Q$ = "nf" THEN 440    IF Q$ = "mf" THEN 5000   IF Q$ = "m" THEN 100   IF Q$ = "q" THEN 4160  GOTO 3030'       2) SMOOTH-INTREPOLATE' '  LEAST SQUARES CALC '  LEAST SQUARE INTERPOLATION AND SMOOTHING OF FISH ECHO PDFS.'  PURPOSE : TO READ VALUES AT EQUALLY SPACED POINTS ON LOG SCALE FOR DECONVOLUTION PRGMS.'  INPUT IS ON LINEAR SCALE.'   INPUT E(N) FROM ECHO PROCESSER HAS ECHO AMPLITUDES 0 TO 31.'   WHOLE CALC IS IN A LONG LOOP ON J=0 TO JH.1260 PRINT "INTERPOLATION TO EQUAL SPACED"  HJ =MS - 1  LJ = 1PRINT "STEPS ON LOG SCALE"'     LEAST SQRS SMOOTHS OVER SM TERMS.THE RANGE,0 TO SM,IS IN J LOOP. SM IS EVEN.PRINT "HIGH J=";HJ;"  LOW J=";LJ;" NO DATA=";NDPRINT "SMOOTH OVER ";SM;" STEPS"PRINT  TAB( 1);"INPUT 'm' TO GOTO 'MENU' FOR NEW"PRINT "PARAMETERS"PRINT " ANY KEY TO CONTINUE";:INPUT Q$IF Q$ = "m" THEN 3030: REM  GOTO MENU '  Calculations'   PDF VALUES AT E=E0*EXP(-J*AL), WHERE AL=LOG(10)/ND. ND SAMPLES/DECADE.'  INPUT PARAMETERS:   AL =  LOG (10) / ND   E0 = HJ + .5   LE0 =  LOG (E0)   BJ =  INT ( -  LOG ((LJ + .5) / E0) / AL)    FOR j = 0 TO BJ      B(j) = E0 *  EXP ( - j * AL)   NEXT j'  STEP 1'SUM E(J) IN APPROXIMATE LOG SPACED BUCKETS.'THEN AVERAGE S/(M1-M2) TO KEEP SAME DELTA E, DE.PRINT" log bins - rough" m = HJ  FOR j = 0 TO BJ     EA(j) = 0:A(j) = 0  NEXT j    FOR j = 0 TO BJ      S = 0      I = 0      M1 = m1430  IF m =  < LJ THEN 1510      m = m - 1      S = S + E(m) / 2 + E(m + 1) / 2       I = I + 1   IF m + .5 >  = B(j + 1) THEN 1430   IF m = LJ THEN OJ = j      EA(j) = S / I      A(j) = M1 + .5 - I / 21510  NEXT j  1520 BJ = OJ  FOR j = 0 TO 10      X(j) = 0      Y(j) = 0  NEXT j  PRINT "J     A(J)    EA(J)"  FOR j = 0 TO BJ     PRINT j; TAB( 7);A(j); TAB( 17);EA(j)  NEXT jINPUT Q$'  LEAST SQUARES CALC  PRINT"--------     least squares smoothing    -------"  PRINT " J"; TAB( 5);"ECHO AMP"; TAB( 20);"ECHO FREQ"'      LOOP ON J    j = 0  FOR m = 0 TO SM     X(m) =  LOG (A(m))   IF EA(m) > 0 THEN Y(m) =  LOG (EA(m))  NEXT m  GOSUB 1960:'compute smoothing coefficients A,B and C    FOR I = 0 TO SM / 2      E = LE0 - I * AL      EE = A + B * E + C * E ^ 2      EF(I) =  EXP (EE)      NEXT I        FOR j = SM / 2 + 1 TO BJ - SM / 2     FOR m = 0 TO SM        X(m) =  LOG (A(j + m - SM / 2))        E = EA(j + m - SM / 2)       IF E > 0 THEN Y(m) =  LOG (E)     NEXT m       GOSUB 1960:'compute least squares smoothing coefficients A,B,C      E = LE0 - j * AL    EE = A + B * E + C * E ^ 2    EF(j) =  EXP (EE)  NEXT j    FOR j = BJ - SM / 2 TO BJ      E = LE0 - j * AL      EE = A + B * E + C * E ^ 2      EF(j) =  EXP (EE)  NEXT j    FOR j = 0 TO BJ      PRINT j; TAB( 5);B(j); TAB( 20);EF(j)  NEXT j'    PART (3)'       3) COMPUTE WE(M) FROM EF(M) '  NF=FISH DENSITY, MP=NO OF PULSES. '   TO CHANGE RAW ECHO FREQUENCY TO ECHO PDF, WE(M)*NF=EF(M)*/(DE*VG*MP) '  FROM CLAY-MEDWIN 7.5.8    VG = 6.2832 * (R2 ^ 3 - R1 ^ 3) / 3    A =  LOG (10) / ND       FOR m = 0 TO BJ      WE(m) = EF(m) / (DE * VG * MP)   NEXT m '       4) COMPUTE WT(B)   PRINT "WT(B)"'  USE CLAY EQ (8,9).'  WT(B) IS PROPORTIONAL TO 1/(KR^2)'  DEFINE KR=K*RT K = 2 * PI * SF / SS KR = K * RT '  I USE EHRENBERGS APPROXIMATION WITH A MODIFICATION, B GOES TO (B+CONST).'  MY TESTS ON EXACT WT(B) FOR CIRCULAR PISTON TRANSDUCER REQUIRE 3 SEGMENTS OF APPROXIMATION.'  APPROXIMATION ERRORS ARE 1 % OR LESS. APPROX APPEARS TO MATCH'  SIMRAD 120 KHZ QUITE WELL.'  EFFECTIVE K*RT =18.3 AND NOMINAL FROM RT AND FREQ IS 22.3.    K2 = KR ^ 2   M0=2*ND+1   'SET MIN VALUE OF B TO ABOUT .008. SMALLER VALUES GIVE POOR WT(B).    FOR m = 0 TO M0       B =  EXP ( - m * A)     IF B >  = .5097 THEN WT(m) = 2.0289 * (B + .017) ^  - .85 / K2     IF B < .5097 THEN WT(m) = 2.0361 * (B + .007) ^  - .82 / K2     IF B <  = .029 THEN WT(m) = 1.8579 * (B + .0032) ^  - .82 / K2   NEXT m   PRINT  '       5) DECONVOLUTION '  DECONVOLVE WE(E) TO GET WF(E)'  USE RECURSIVE POLYNOMIAL LONG DIVISION ALGORITHM.    PRINT     PRINT "DECONVOLVE WE(E)/WT(B)"        WF(0) = WE(0) / WT(0)   FOR j = 1 TO BJ       S = 0          FOR m = 1 TO M0              SC = 0            IF j >  = m THEN SC = WT(m) * WF(j - m)              S = S + SC          NEXT m          WF(j) =  - S / WT(0)        IF j < M0 THEN WF(j) = WF(j) + WE(j) / WT(0)   NEXT j   '  --- END DCVL ----- '  INCLUDE A FOR SUMMATION STEPS'   CALIB FACTOR FOR ECHO AMPLITUDES  R = (R1 + R2) / 2  IF R > MR THEN CF = CS * PC * R ^ 2 / MR ^ 2 ' compute WF(J) with 1/a factor for log transformation increments,    A=LOG(10)/ND  FOR j = 0 TO BJ      WF(j) = WF(j) / A  NEXT j3190  '  ------ PRINT SONAR PARAMETERS    FOR j = 0 TO IT - 1       PRINT A$(j)  NEXT j  PRINT   PRINT "SONAR PARAMETERS"  PRINT " SIMRAD EY-M"  PRINT "   FREQ =";SF  PRINT "   SOUND SPEED=";SS  PRINT "   TRANS RADIUS=";RT;" M"  PRINT "   SOURCE LEVEL'";SL;" DB, (1MU BAR AT 1 M)"  PRINT "   RCV TRNS=";RL;" DB"  PRINT "   RCV GAIN SET=";GS  PRINT "   TVG=";TVG;" LOG(R) DB"  PRINT "   CALIB SONAR GAIN AT 1 M="; INT (10 * G1 + .5) / 10;" DB"  PRINT "   RANGES,R1,R2 = ";R1;",";R2;"M"  PRINT "   TOTAL NO. PINGS=";MP  PRINT "   PROCESSER GAIN=";PG  PRINT "   E0=";E0  PRINT "   DELTA E=";DE  PRINT "   TAPE REC.GAIN=";TR  PRINT "   SYSTEM CALIB.=";CF    GOTO 3030  3440 '   ------  AND E(J)   FOR j = 0 TO IT      PRINT A$(j)  NEXT j    PRINT "R1,R2=";R1;",";R2;" NO PINGS=";MP  PRINT "J"; TAB( 5);"E(J)"; TAB( 13);"J"; TAB( 20);"E(J)"    m =  INT (MS / 2 - 1 + .5)      FOR j = 0 TO m      PRINT j; TAB( 5);E(j); TAB( 13);m + 1 + j; TAB( 20);E(m + 1 + j)  NEXT j  GOTO 3030  3590 '   INTERPOLATED FILE  PRINT "LOW J=";LJ  PRINT "HIGH J=";HJ  PRINT "SMOOTH OVER SM=";SM  PRINT " J"; TAB( 5);"ECHO AMP"; TAB( 20);"ECHO FREQ"  FOR j = 0 TO BJ      PRINT j; TAB( 5);B(j); TAB( 20);EF(j)  NEXT j  GOTO 30303730  '  PRINT FISH PDF WF(J)  PRINT N$   PRINT "M"; TAB( 5);"E(M)"; TAB( 23);"WF(M)"   FOR j = 0 TO BJ       B =  INT (100 * B(j)) / 100       PRINT j; TAB( 5);B; TAB( 12); TAB( 21);WF(j)  NEXT j   PRINT  PRINT "SMOOTH=";SM;"  LOW J=";LJ;"  HIGH J=";HJ;" STEPS/DECADE=";ND  GOTO 3030  3960  '  NEW PARAMETERS FOR NEW CALC  PRINT "OLD INTERP AND SMOOTHING PARM"  PRINT "STEPS / DECADE=";ND  PRINT "           NEW=";: INPUT ND  PRINT "NO OF STEPS=";BJ  PRINT "        NEW=";: INPUT BJ  PRINT "SMOOTH OVER ";SM;" STEPS"  PRINT "         NEW=";: INPUT SM  PRINT "ECHO AMPL INDEX"  PRINT "OLD LOW J=";LJ  PRINT "      NEW=";: INPUT LJ'   BIG NOISE AMPLITUDES CAN GIVE BAD INTREPOLATIONS.  PRINT "SYSTEM OVERLOAD GIVES POOR VALUES FOR J=31"  PRINT "PRESENT HJ=";HJ  PRINT "       NEW=";: INPUT HJ  PRINT GOTO 30304160  END440 ' 1) READ RAW FISH ECHO FILE520  REM  ENTER DATA540  PRINT " READ FILE NAMED";:INPUT name1$          OPEN name1$ FOR INPUT AS #1     INPUT #1, SF: REM   SONAR FREQINPUT #1, SS: REM   SOUND SPEEDINPUT #1, RT: REM   RAD TRNSDUCERINPUT #1, R1: REM   RANGES R1 ,R2INPUT #1, R2INPUT #1, MP: REM   NO OF PINGSINPUT #1, E0: REM   MAX RAW ECHO PROC AMPINPUT #1, DE: REM   DELTA EINPUT #1, MS: REM   NO AMP BINSINPUT #1, GS: REM   SONAR GAIN SET.ALL PARAMETERS IN DBINPUT #1, SL: REM   SOURCE LEVELINPUT #1, RL: REM   RCV TRNS LEVELINPUT #1, TVG: REM   TVG 40 OR 20INPUT #1, MR: REM   MAX TVG RANGEINPUT #1, G1: REM   GAIN AT 1 MINPUT #1, PG: REM   PROCESSOR GAIN.LINEAR FOR PG,PV,TRINPUT #1, PV: REM   PROC VOLT CALIBINPUT #1, TR: REM   TAPE REC GAINFOR j = 0 TO MS - 1    INPUT #1, E(j)NEXT jINPUT #1, IT: REM  TEXT  PRINT    FOR j = 0 TO IT - 1    INPUT #1, A$(j)    PRINT A$(j)  NEXT j   CLOSE #1 'DEFAULTS FOLLOWGOTO 1005000  REM  ------- WRITE FILE---   PRINT "OLD NAME =";N$  PRINT "NEW FILE=";: INPUT NN$ '  WRITE THE FILE   PRINT "WRITE FILE"OPEN NN$ FOR OUTPUT AS #2WRITE #2, name1$:' input fileWRITE #2, NN$:' output fileWRITE #2, SF: REM  SONAR FREQWRITE #2, SS: REM  SOUND SPEEDWRITE #2, RT: REM  RAD TRNSDUCERWRITE #2, R1: REM  RANGES R1 ,R2WRITE #2, R2WRITE #2, MP: REM  NO OF PINGSWRITE #2, E0: REM  MAX RAW ECHO PROC AMPWRITE #2, DE: REM  DELTA EWRITE #2, BJ: REM   NO AMP BINSWRITE #2, GS: REM  SONAR GAIN SETWRITE #2, SL: REM  SOURCE LEVELWRITE #2, RL: REM  RCV TRNS LEVELWRITE #2, TVG: REM  TVG 40 OR 20WRITE #2, MR: REM  MAX TVG RANGEWRITE #2, G1: REM  GAIN AT 1 MWRITE #2, PG: REM  PROCESSOR GAINWRITE #2, PV: REM  PROC VOLT CALIBWRITE #2, TR: REM  TAPE REC GAINWRITE #2, ND: REM  STEPS/DECADEWRITE #2, SM: REM  smoothing steps  FOR j = 0 TO BJ    WRITE #2,B(j), WF(j)  NEXT j  WRITE #2, IFOR j = 0 TO I - 1    WRITE #2, A$(j)NEXT jCLOSE #2GOTO 3030: '  MENU1960 'subroutine for least squares fit     N = SM + 1     Y1 = 0:Y2 = 0:Y3 = 0:X1 = 0 X2 = 0:X3 = 0:X4 = 0   FOR m = 0 TO SM      Y1 = Y1 + Y(m)      Y2 = Y2 + Y(m) * X(m)      Y3 = Y3 + Y(m) * X(m) ^ 2      X1 = X1 + X(m)      X2 = X2 + X(m) ^ 2      X3 = X3 + X(m) ^ 3      X4 = X4 + X(m) ^ 4    NEXT m  '  SOLVE DETERMINATE D = N * X2 * X4 + X1 * X2 * X3 + X1 * X2 * X3 - X2 ^ 3 - X1 ^ 2 * X4 - N * X3 ^ 2 A = Y1 * X2 * X4 + X1 * X3 * Y3 + Y2 * X2 * X3 - Y3 * X2 ^ 2 - Y2 * X1 * X4 - Y1 * X3 ^ 2 A = A / D B = N * Y2 * X4 + Y1 * X2 * X3 + Y3 * X1 * X2 - Y2 * X2 ^ 2 - Y1 * X1 * X4 - N * Y3 * X3 B = B / D C = N * Y3 * X2 + Y2 * X1 * X2 + Y1 * X1 * X3 - Y1 * X2 ^ 2 - Y3 * X1 ^ 2 - N * Y2 * X3 C = C / D'  USE A,B,C TO CALC INTERPOLATION  RETURN '2180  NEXT J