{
    "$id": "https://example.com/anatomical.echosms.schema.json",
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "title": "EchoSMs anatomical data store schema",
    "description": "This document is the JSON schema for the echoSMs anatomical data store. It provides a standardised structure for storing fish and plankton acoustic scattering model data.",
    "type": "object",
    "required": [
        "description",
        "anatomical_category",
        "anatomical_features",
        "date_first_added",
        "date_last_modified",
        "aphiaID",
        "date_collection",
        "date_image",
        "imaging_method",
        "shape_method",
        "shape_data_types",
        "dataset_size",
        "dataset_id",
        "specimens"
    ],
    "properties": {
        "dataset_id": {
			"description": "A unique identifier for this dataset, generated by the data storage system.",
            "type": "string"
        },
        "description": {
            "type": "string",
            "description": "A description of the dataset."
        },
        "anatomical_category": {
            "description": "The type of anatomy that this dataset contains.",
            "enum": [
                "tissue",
                "organ",
                "organ system",
                "organism",
                "other"
            ]
        },
        "anatomical_features": {
            "description": "The type of anatomical features in this dataset.",
            "type": "array",
            "minItems": 1,
            "items": {
                "enum": [
                    "body",
                    "swimbladder",
                    "backbone",
                    "muscle",
                    "other"
                ]
            }
        },
        "date_first_added": {
            "type": "string",
            "format": "date",
            "description": "The date when these metadata were first created, in [RFC9557](https://datatracker.ietf.org/doc/rfc9557) format."
        },
        "date_last_modified": {
            "type": "string",
            "format": "date",
            "description": "The date when these metadata were last modified, in [RFC9557](https://datatracker.ietf.org/doc/rfc9557) format."
        },
        "aphiaID": {
            "type": "integer",
            "minimum": 1,
            "description": "The WoRMS [aphiaID](https://www.marinespecies.org/aphia.php) of the species in this dataset."
        },
        "class": {
            "type": "string",
            "description": "Taxonomical hierarchy level of class that is consistent with WoRMS."
        },
        "order": {
            "description": "Taxonomical hierarchy level of order that is consistent with WoRMS.",
            "type": "string"
        },
        "family": {
            "description": "Taxonomical hierarchy level of family that is consistent with WoRMS.",
            "type": "string"
        },
        "genus": {
            "description": "Taxonomical hierarchy level of genus that is consistent with WoRMS.",
            "type": "string"
        },
        "species": {
            "description": "Taxonomical hierarchy level of species that is consistent with WoRMS.",
            "type": "string"
        },
        "vernacular_name": {
            "description": "A vernacular name for the organism.",
            "type": "string"
        },
        "reference": {
            "description": "A literature reference for the dataset. If available, a DOI or URI is recommended.",
            "type": "string"
        },
        "activity_name": {
			"description": "Name of the data collection activity (if any), such as voyage code, project name, etc.",
            "type": "string"
        },
        "location": {
			"description": "Name or description of the location where organism was collected.",
            "type": "string"
        },
		"latitude": {
			"description": "Latitude of location where organism was collected (decimal degrees).",
			"type": "number",
			"minimum": -90.0,
			"maximum": 90.0
		},
		"longitude": {
			"description": "Longitude of location where organism was collected (decimal degrees).",
			"type": "number",
			"minimum": -180.0,
			"maximum": 180.0
		},
		"depth": {
			"description": "Depth below surface of organism collection location (m).",
			"type": "number",
			"minimum": 0.0
		},
        "date_collection": {
            "description": "The date or date range when the dataset was collected, in [RFC9557](https://datatracker.ietf.org/doc/rfc9557) format.",
            "type": "string",
            "format": "date"
        },
        "date_image": {
            "description": "The date when the dataset was imaged, in [RFC9557](https://datatracker.ietf.org/doc/rfc9557) format.",
            "type": "string",
            "format": "date"
        },
        "investigators": {
			"description": "Names or identifying descriptions of persons or organisations that created this dataset.",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "data_collection_description": {
			"description": "Description of data collection details.",
            "type": "string"
        },
        "note": {
			"description": "Explanatory notes about the shape data.",
            "type": "string"
        },
        "imaging_method": {
            "description": "Method used to obtain the raw image data.",
            "enum": [
                "radiograph",
                "CT",
                "MRI",
                "photograph",
                "other"
            ]
        },
        "shape_method": {
			"description": "Method used to obtain the feature shape.",
            "enum": [
                "manual",
                "automated",
                "other"
            ]
        },
        "shape_method_processing": {
			"description": "Description of processing used to convert raw images into shapes, including any manipulation of image data (for example, smoothing, edge enhancement, rotation, etc).",
            "type": "string"
        },
        "model_type": {
			"description": "Original scattering model type.",
            "enum": [
                "KRM",
                "KA",
                "DWBA",
                "PTDWBA",
                "FEM",
                "BEM",
                "MFS",
                "other"
            ]
        },
        "sound_speed_method": {
			"description": "Method used to obtain sound speed in the feature.",
            "enum": [
                "density to sound speed relationship",
                "time-of-flight",
                "literature",
                "other"
            ]
        },
        "mass_density_method": {
			"description": "Method used to obtain density in the feature.",
            "enum": [
                "CT density",
                "liquid displacement",
                "literature",
                "other"
            ]
        },
        "shape_data_types": {
			"description": "Shape data types in this dataset.",
            "type": "array",
            "items": {
                "minItems": 1,
                "enum": [
                    "surface",
                    "voxels",
                    "outline"
                ]
            }
        },
        "dataset_size": {
			"description": "Size of the entire dataset (including raw data) (MiB). Generated by the data store server.",
            "type": "number",
            "minimum": 0.0
        },
        "specimens": {
			"description": "Specimen data.",
            "type": "array",
            "items": {
                "type": "object",
				"required": ["specimen_id", "specimen_condition", "shapes", "length", "length_type", "shape_type"],
                "properties": {
                    "specimen_id": {
						"description": "A name that uniquely identifies each specimen in a dataset.",
                        "type": "string"
                    },
                    "specimen_condition": {
						"description": "Condition of the specimen when it was imaged.",
                        "enum": [
                            "fresh",
                            "frozen",
                            "thawed",
                            "other"
                        ]
                    },
                    "length": {
						"description": "Length of the specimen (m).",
                        "type": "number",
                        "minimum": 0.0
                    },
                    "weight": {
						"description": "Weight of the specimen (kg).",
                        "type": "number",
                        "minimum": 0.0
                    },
                    "length_type": {
						"description": "Type of length measurement.",
                        "enum": [
                            "total length",
                            "fork length",
                            "standard length",
                            "lower jaw fork length",
                            "total width",
                            "carapace length",
                            "curved fork length",
                            "disc width",
                            "stretched total length",
                            "other"
                        ]
                    },
                    "shape_type": {
                        "description": "Type of shape data used for this specimen.",
                        "enum": [
                            "outline",
                            "surface",
                            "voxels"
                        ]
                    },
                    "shapes": {
						"description": "Shape data.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": ["name"],
                            "properties": {
                                "name": {
									"description": "Name of the shape, typically 'body', 'swimbladder', etc.",
                                    "type": "string"
                                }
                            },
                            "oneOf": [
                                {
                                    "required": ["x", "y", "z", "height", "width", "boundary"],
                                    "properties": {
                                        "type": {"const": "outline"},
                                        "x": {
                                            "description": "x-coordinate of shape centreline (m).",
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "minItems": 1
                                            }
                                        },
                                        "y": {
                                            "description": "y-coordinate of shape centreline (m).",
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "minItems": 1
                                            }
                                        },
                                        "z": {
                                            "description": "z-coordinate of shape centreline (m).",
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "minItems": 1
                                            }
                                        },
                                        "height": {
                                            "description": "Height of the shape at each centreline point (m).",
                                            "type": "array",
                                                "items": {
                                                    "type": "number",
                                                    "minItems": 1,
                                                    "minimum": 0.0
                                                }
                                        },
                                        "width": {
                                            "description": "Width of the shape at each centreline point (m).",
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "minItems": 1,
                                                "minimum": 0.0
                                            }
                                        },
                                        "mass_density": {"$ref": "#/$defs/mass_density"},
                                        "sound_speed_compressional": {"$ref": "#/$defs/sound_speed_compressional"},
                                        "sound_speed_shear": {"$ref": "#/$defs/sound_speed_shear"},
                                        "mass_density_ratio": {"$ref": "#/$defs/mass_density_ratio"},
                                        "sound_speed_ratio": {"$ref": "#/$defs/sound_speed_ratio"},
                                        "youngs_modulus": {"$ref": "#/$defs/youngs_modulus"},
                                        "boundary": {"$ref": "#/$defs/boundary"}
                                    }
								},
                                {
                                    "required": ["x", "y", "z", "facets", "normals", "boundary"],
                                    "properties": {
                                        "type": {"const": "surface"},
                                        "x": {
                                            "description": "x-coordinates of surface nodes (m).",
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "minItems": 1
                                            }
                                        },
                                        "y": {
                                            "description": "y-coordinates of surface nodes (m).",
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "minItems": 1
                                            }
                                        },
                                        "z": {
                                            "description": "z-coordinates of surface nodes (m).",
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "minItems": 1
                                            }
                                        },
                                        "facets": {
                                            "description": "Zero-based indices into x, y, and z that define the nodes that make up each surface triangle.",
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "minItems": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "minimum": 0,
                                                    "minItems": 3,
                                                    "maxItems": 3
                                                }
                                            }
                                        },
                                        "normals": {
                                            "description": "Normal vectors for each facet that point outwards from the surface.",
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "minItems": 1,
                                                "items": {
                                                    "type": "number",
                                                    "minItems": 3,
                                                    "maxItems": 3
                                                }
                                            }
                                        },
                                        "mass_density": {"$ref": "#/$defs/mass_density"},
                                        "sound_speed_compressional": {"$ref": "#/$defs/sound_speed_compressional"},
                                        "sound_speed_shear": {"$ref": "#/$defs/sound_speed_shear"},
                                        "mass_density_ratio": {"$ref": "#/$defs/mass_density_ratio"},
                                        "sound_speed_ratio": {"$ref": "#/$defs/sound_speed_ratio"},
                                        "youngs_modulus": {"$ref": "#/$defs/youngs_modulus"},
                                        "boundary": {"$ref": "#/$defs/boundary"}
                                    }
                                },
                                {
                                    "required": ["voxel_size", "mass_density", "sound_speed_compressional"],
                                    "properties": {
                                        "type": {"const": "voxels"},
                                        "voxel_size": {
                                            "description": "Voxel size, ordered x, y, z (m).",
                                            "type": "array",
                                            "items": {
                                                "type": "number",
                                                "minimum": 0.0,
                                                "minItems": 3,
                                                "maxItems": 3
                                            }
                                        },
                                        "mass_density": {
                                            "description": "Mass density of voxels (kg/m³).",
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "minItems": 1,
                                                "items": {
                                                    "type": "array",
                                                    "minItems": 1,
                                                    "items": {
                                                        "type": "number",
                                                        "minItems": 1,
                                                        "minimum": 0.0
                                                    }
                                                }
                                            }
                                        },
                                        "sound_speed_compressional": {
                                            "description": "Compressional sound speed of voxels (kg/m³).",
                                            "type": "array",
                                            "minItems": 1,
                                            "items": {
                                                "type": "array",
                                                "minItems": 1,
                                                "items": {
                                                    "type": "array",
                                                    "minItems": 1,
                                                    "items": {
                                                        "type": "number",
                                                        "minItems": 1,
                                                        "minimum": 0.0
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
						}	
					}
                }
            }
        }
    },
    "$defs": {
        "mass_density": {
            "description": "Mass density of shape (kg/m³).",
            "type": "number",
            "minimum": 0.0
        },
        "sound_speed_compressional": {
            "description": "Compressional sound speed in shape (m/s).",
            "type": "number",
            "minimum": 0.0
        },
        "sound_speed_shear": {
            "description": "Transversal (shear) sound speed in shape (m/s).",
            "type": "number",
            "minimum": 0.0
        },
        "mass_density_ratio": {
            "description": "Ratio of mass densities of the shape and the surrounding material or shape.",
            "type": "number",
            "minimum": 0.0
        },
        "sound_speed_ratio": {
            "description": "Ratio of compressional sound speed of the and the surrounding material or shape (m/s).",
            "type": "number",
            "minimum": 0.0
        },
        "youngs_modulus": {
            "description": "Young's modulus, E, of the shape (Pa).",
            "type": "number",
            "minimum": 0.0
        },
        "boundary": {
            "description": "Type of reflecting boundary for this shape.",
            "enum": [
                "hard",
                "soft",
                "fluid"
            ]
        }
    }
}